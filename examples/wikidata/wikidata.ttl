@base         <https://github.com/AtomGraph/Processor/blob/develop/examples/wikidata> .

@prefix :     <#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl:  <http://www.w3.org/2002/07/owl#> .
@prefix ldt:  <https://www.w3.org/ns/ldt#> .
@prefix sp:   <http://spinrdf.org/sp#> .
@prefix spin: <http://spinrdf.org/spin#> .
@prefix spl:  <http://spinrdf.org/spl#> .

: a ldt:Ontology ;
    owl:imports ldt:, sp: ;
    rdfs:label "Wikidata's LDT ontology" .

# root

:RootTemplate a ldt:Template ;
    rdfs:label "Root resource template" ;
    ldt:match "/" ;
    ldt:query :RootQuery ;
    rdfs:isDefinedBy : .

:RootQuery a ldt:Query, sp:Construct ;
    rdfs:label "Root query" ;
    sp:text """PREFIX foaf:   <http://xmlns.com/foaf/0.1/>
PREFIX dct:    <http://purl.org/dc/terms/>
PREFIX rdfs:    <http://www.w3.org/2000/01/rdf-schema#>

CONSTRUCT 
  { 
    ?this a foaf:Document ;
        dct:title "This is an RDF document served by AtomGraph Processor" ;
        rdfs:seeAlso <birthdays>, <sparql> .
  }
WHERE
  {
  }""" ;
    rdfs:isDefinedBy : .

# birthdays

:BirthdaysTemplate a ldt:Template ;
    rdfs:label "People born today" ;
    ldt:match "/birthdays" ;
    ldt:param :SexParam ;
    ldt:query [ a :BirthdaysQueryTemplate ] ;
    rdfs:isDefinedBy : .

:SexParam a ldt:Parameter ;
    rdfs:label "Sex parameter" ;
    spl:predicate :sex ;
    spl:valueType rdfs:Resource ;
    spl:optional true ;
    rdfs:isDefinedBy : .

:BirthdaysQueryTemplate a spin:Template ;
    rdfs:label "Birthdays query template" ;
    spin:constraint :SexParam ;
    spin:body :BirthdaysQuery ;
    rdfs:isDefinedBy : .

:BirthdaysQuery a ldt:Query, sp:Construct ;
    rdfs:label "Birthdays query" ;
    sp:text """PREFIX  bd:   <http://www.bigdata.com/rdf#>
PREFIX  wdt:  <http://www.wikidata.org/prop/direct/>
PREFIX  wikibase: <http://wikiba.se/ontology#>

CONSTRUCT 
  { 
    ?entity <https://github.com/AtomGraph/Processor/blob/develop/examples/wikidata#birthYear> ?year ;
        wdt:P21 ?sex
  }
WHERE
  { SELECT  ?entity ?year
    WHERE
      { BIND(month(now()) AS ?nowMonth)
        BIND(day(now()) AS ?nowDay)
        ?entity wdt:P569 ?date ;
            wdt:P21 ?sex .
        FILTER ( ( month(?date) = ?nowMonth ) && ( day(?date) = ?nowDay ) )
        BIND(year(?date) AS ?year)
      }
    LIMIT 100
  }""" ;
    rdfs:isDefinedBy : .